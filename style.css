/* ------------------- */
/* custom properties   */
/* ------------------- */

:root {

  /* color */
  --clr-dark: 230 35% 7%; /* Dark color for background */
  --clr-light: 231 77% 90%; /* Light color */
  --clr-white: 0 0% 100%; /* White color */

  /* font-family */
  --ff-serif: "Bellefair", serif; /* Serif font family */
  --ff-sans-cond: "Barlow Condensed", sans-serif; /* Condensed sans-serif font family */
  --ff-sans-normal: "Barlow", sans-serif; /* Normal sans-serif font family */

  /* font-sizes */
  --fs-900: clamp(5rem, 8vw + 1rem, 9.375rem); /* Responsive font size */
  --fs-800: 3.5rem; /* Font size */
  --fs-700: 1.5rem; /* Font size */
  --fs-600: 1rem; /* Font size */
  --fs-500: 1.75rem; /* Font size */
  --fs-400: 0.9375rem; /* Font size */
  --fs-300: 1rem; /* Font size */
  --fs-200: 0.875rem; /* Font size */
}

@media (min-width: 35em) {
:root {
    --fs-800: 5rem; /* Responsive font size */
    --fs-700: 2.5rem; /* Responsive font size */
    --fs-600: 1.5rem; /* Responsive font size */
    --fs-400: 1rem; /* Responsive font size */
}
}

@media (min-width: 45em) {
:root {
  --fs-800: 6.25rem; /* Responsive font size */
  --fs-700: 3.5rem; /* Responsive font size */
  --fs-600: 2rem; /* Responsive font size */
  --fs-400: 1.125rem; /* Responsive font size */
}
}

/* box-sizing */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* reset margins */

body,
h1,
h2,
h3,
h4,
h5,
h6,
p,
figure,
picture {
  margin: 0;
}

h1,
h2,
h3,
h4,
h5,
h6,
p {
  font-weight: 400;
}

/* reset body */

body {
  font-family: var(--ff-sans-normal);
  font-size: var(--fs-400);
  color: hsl( var(--clr-white) ); /* Text color */
  background-color: hsl( var(--clr-dark) ); /* Background color */
  line-height: 1.5; /* Line height */
  min-height: 100vh; /* Minimum height of the viewport */

  display: grid; /* Display grid */
  grid-template-rows: min-content 1fr; /* Define grid template rows */
}

/* resetting images */

img,
picture {
  max-width: 100%; /* Maximum width */
  display: block; /* Display block */
}

/* set up form elements to work with */

input,
button,
textarea,
select {
  font: inherit; /* Inherit font */
}

/* remove animations for people who've turned them off */

@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
      animation-duration: 0.01ms !important; /* Set animation duration */
      animation-iteration-count: 1 !important; /* Set animation iteration count */
      transition-duration: 0.01ms !important; /* Set transition duration */
      scroll-behavior: auto !important; /* Set scroll behavior */

  }

}

/* ------------------- */
/* utility classes             */
/* ------------------- */

.flex {
  display: flex; /* Display flex */
  gap: var(--gap, 1rem); /* Gap */
}

.grid {
  display: grid; /* Display grid */
  gap: var(--gap, 1rem); /* Gap */
}

.d-block {
display: block; /* Display block */
}

.flow > *:where(:not(:first-child)) {
  margin-top: var(--flow-space, 1rem); /* Margin top */
}

.container {
  padding-inline: 2em; /* Padding inline */
  margin-inline: auto; /* Margin inline */
  max-width: 80rem; /* Maximum width */
}

.grid-container {
text-align: center; /* Text align center */
display: grid; /* Display grid */
place-items: center; /* Place items in center */
padding-inline: 1rem; /* Padding inline */
}

.grid-container * {
max-width: 50ch; /* Maximum width */
}

@media (min-width: 45em) {
  .grid-container {
    text-align: left; /* Text align left */
    column-gap: var(--container-gap, 2rem); /* Column gap */
    grid-template-columns: minmax(2rem, 1fr) repeat(2, minmax(0, 40rem)) minmax(2rem, 1fr); /* Grid template columns */
  }

  .grid-container > *:first-child {
    grid-column: 2; /* Grid column */
  }
  
  .grid-container > *:last-child {
    grid-column: 3; /* Grid column */
  }

  .grid-container--home {
    padding-bottom: max(6rem, 20vh); /* Padding bottom */
    align-items: end; /* Align items */
  }
}


/* 
Doing with flex

@media (min-width: 45em) {

.flex-container{
  display: flex; 
  gap: var(--container-gap, 2rem);
}

.flex-container > * {
  flex: 1;
  width: 100%;
}

} */


.sr-only {
    position: absolute; /* Position absolute */
    width: 1px; /* Width */
    height: 1px; /* Height */
    padding: 0; /* Padding */
    margin: -1px; /* Margin */
    overflow: hidden; /* Overflow hidden */
    clip: rect(0, 0, 0, 0); /* Clip */
    white-space: nowrap; /* White space */
    border: 0; /* Border */
}

/* background-color */

  .bg-dark {background-color: hsl(var(--clr-dark));} /* Background color dark */
  .bg-light {background-color: hsl(var(--clr-light));} /* Background color light */
  .bg-white {background: hsl(var(--clr-white));} /* Background color white */
/* text-color */

  .text-dark {color: hsl(var(--clr-dark));} /* Text color dark */
  .text-light {color: hsl(var(--clr-light));} /* Text color light */
  .text-white {color: hsl(var(--clr-white));} /* Text color white */
/* font-size */

  .fs-900 {font-size:var(--fs-900)}  /* Font size */
  .fs-800 {font-size:var(--fs-800)}  /* Font size */
  .fs-700 {font-size:var(--fs-700)}  /* Font size */
  .fs-600 {font-size:var(--fs-600)}  /* Font size */
  .fs-500 {font-size:var(--fs-500)}  /* Font size */
  .fs-400 {font-size:var(--fs-400)}  /* Font size */
  .fs-300 {font-size:var(--fs-300)}  /* Font size */
  .fs-200 {font-size:var(--fs-200)} /* Font size */
  /* uppercase */

  .uppercase {text-transform: uppercase;} /* Text transform uppercase */
  /* line height */

  .fs-900,
  .fs-800,
  .fs-700,
  .fs-600 {
    line-height: 1.1; /* Line height */
}
/* font-family */

  .ff-serif{font-family: var(--ff-serif)} /* Font family serif */
  .ff-sans-cond{font-family: var(--ff-sans-cond)}  /* Font family sans-condensed */
  .ff-sans-normal{font-family: var(--ff-sans-normal)} /* Font family sans-normal */
/* spacing */

  .letter-spacing-1 { letter-spacing: 4.75px; }  /* Letter spacing */
  .letter-spacing-2 { letter-spacing: 2.7px; }  /* Letter spacing */
  .letter-spacing-3 { letter-spacing: 2.35px; }  /* Letter spacing */

/* ------------------- */
/* components   */
/* ------------------- */

  .primary-navigation {
    --gap: 2rem; /* Gap */
    list-style: none; /* List style */
    padding: 0; /* Padding */
    margin: 0; /* Margin */
    --underline-gap: 2rem; /* Underline gap */
  }

  .primary-navigation a {
    text-decoration: none; /* Text decoration none */
  }

  .primary-navigation a > span {
    font-weight: 700; /* Font weight */
    margin-right: 0.5em; /* Margin right */
  }

.underline-indicators > * {
    border-bottom: solid 0.2rem hsl(var(--clr-white)/0); /* Border bottom */
    padding: var(--underline-gap, 1rem) 0; /* Padding */
}

.underline-indicators > *:hover,
.underline-indicators > *:focus {
    border-bottom: solid 0.2rem hsl(var(--clr-white)/.5); /* Border bottom */
}

.underline-indicators > .active,
.underline-indicators [aria-selected = "true"] {
    border-bottom: solid 0.2rem hsl(var(--clr-white)/1); /* Border bottom */
}

/* Styling for large button */
.large-button {
  font-size: 2rem; /* Set font size to 2rem */
  position: relative; /* Position relative to enable absolute positioning for pseudo-element */
  z-index: 1; /* Set z-index to prevent pseudo-element overlap with content */
  display: inline-grid; /* Use inline-grid for proper centering */
  place-items: center; /* Center the content vertically and horizontally */
  padding: 0 2em; /* Apply padding to the button */
  border-radius: 50%; /* Make the button circular */
  aspect-ratio: 1; /* Maintain aspect ratio for circular shape */
  text-decoration: none; /* Remove default link underline */
}

/* Pseudo-element for hover effect */
.large-button::after {
  content: ''; /* Empty content */
  position: absolute; /* Position absolute to overlap the button */
  z-index: -1; /* Set lower z-index to place it behind the button */
  width: 100%; /* Set width to cover the entire button */
  height: 100%; /* Set height to cover the entire button */
  background: hsl( var(--clr-white) / .1); /* Semi-transparent background color */
  border-radius: 50%; /* Make the pseudo-element circular */
  opacity: 0; /* Initially invisible */
  transition: opacity 500ms linear, transform 750ms ease-in-out; /* Smooth transition for opacity and transform */
}

/* Hover and focus effects */
.large-button:hover::after,
.large-button:focus::after {
  opacity: 1; /* Make the pseudo-element visible on hover and focus */
  transform: scale(1.5); /* Scale up the pseudo-element for an interactive effect */
}

/* Page-specific styles for home */
.home {
  background-image: url(./assets/home/background-home-mobile.jpg); /* Set background image for mobile */
  background-repeat: no-repeat; /* Prevent background image from repeating */
  background-size: cover; /* Cover the entire container */
  background-position: bottom center; /* Position the background image at the bottom center */
}

/* Media query for tablet */
@media (min-width: 35em) {
  .home {
    background-position: center center; /* Reposition background image to center */
    background-image: url(./assets/home/background-home-tablet.jpg); /* Update background image for tablets */
  }
}

/* Media query for desktop */
@media (min-width: 45em) {
  .home {
    background-image: url(./assets/home/background-home-desktop.jpg); /* Update background image for desktop */
  }
}
